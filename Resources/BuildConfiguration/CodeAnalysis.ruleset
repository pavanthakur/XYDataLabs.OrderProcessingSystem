<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="Enterprise Code Analysis Rules" Description="Enterprise-grade code analysis rules for .NET projects" ToolsVersion="17.0">
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp" RuleNamespace="Microsoft.CodeAnalysis.CSharp">
    <!-- Critical Security Rules - All as Errors -->
    <Rule Id="CA2100" Action="Error" />  <!-- Review SQL queries for security vulnerabilities -->
    <Rule Id="CA2013" Action="Error" />  <!-- Do not use ReferenceEquals with value types -->
    <Rule Id="CA2014" Action="Error" />  <!-- Do not use stackalloc in loops -->
    <Rule Id="CA1308" Action="Error" />  <!-- Normalize strings to uppercase -->
    
    <!-- Performance Rules -->
    <Rule Id="CA1810" Action="Warning" />  <!-- Initialize reference type static fields inline -->
    <Rule Id="CA1822" Action="Info" />     <!-- Mark members as static -->
    <Rule Id="CA1825" Action="Warning" />  <!-- Avoid zero-length array allocations -->
    <Rule Id="CA1826" Action="Warning" />  <!-- Use property instead of Linq Enumerable method -->
    <Rule Id="CA1827" Action="Warning" />  <!-- Do not use Count()/LongCount() when Any() can be used -->
    <Rule Id="CA1828" Action="Warning" />  <!-- Do not use CountAsync/LongCountAsync when AnyAsync can be used -->
    <Rule Id="CA1829" Action="Warning" />  <!-- Use Length/Count property instead of Enumerable.Count method -->
    <Rule Id="CA1834" Action="Warning" />  <!-- Use StringBuilder.Append(char) for single character strings -->
    <Rule Id="CA1835" Action="Warning" />  <!-- Prefer the memory-based overloads of ReadAsync/WriteAsync -->
    <Rule Id="CA1836" Action="Warning" />  <!-- Prefer IsEmpty over Count when available -->
    <Rule Id="CA1837" Action="Warning" />  <!-- Use Environment.ProcessId instead of Process.GetCurrentProcess().Id -->
    <Rule Id="CA1838" Action="Warning" />  <!-- Avoid StringBuilder parameters for P/Invokes -->
    
    <!-- Quality Rules -->
    <Rule Id="CA1062" Action="Warning" />  <!-- Validate arguments of public methods -->
    <Rule Id="CA1303" Action="Warning" />  <!-- Do not pass literals as localized parameters -->
    <Rule Id="CA1849" Action="Warning" />  <!-- Call async methods when in an async method -->
    <Rule Id="CA2007" Action="None" />     <!-- Do not directly await a Task (ConfigureAwait not needed in ASP.NET Core) -->
    
    <!-- Security Rules -->
    <Rule Id="CA3001" Action="Warning" />  <!-- Review code for SQL injection vulnerabilities -->
    <Rule Id="CA3003" Action="Warning" />  <!-- Review code for file path injection vulnerabilities -->
    <Rule Id="CA3006" Action="Warning" />  <!-- Review code for process command injection vulnerabilities -->
    <Rule Id="CA3012" Action="Warning" />  <!-- Review code for regex injection vulnerabilities -->
    
    <!-- Reliability Rules -->
    <Rule Id="CA2000" Action="Warning" />  <!-- Dispose objects before losing scope -->
    <Rule Id="CA2002" Action="Warning" />  <!-- Do not lock on objects with weak identity -->
    <Rule Id="CA2008" Action="Warning" />  <!-- Do not create tasks without passing a TaskScheduler -->
    <Rule Id="CA2009" Action="Warning" />  <!-- Do not call ToImmutableCollection on an ImmutableCollection value -->
    <Rule Id="CA2011" Action="Warning" />  <!-- Do not assign property within its setter -->
    <Rule Id="CA2012" Action="Warning" />  <!-- Use ValueTasks correctly -->
    <Rule Id="CA2016" Action="Warning" />  <!-- Forward the CancellationToken parameter to methods that take one -->
  </Rules>
  
  <!-- StyleCop Rules - As Warnings/Info for Code Quality -->
  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
    <Rule Id="SA1633" Action="None" />      <!-- File must have header - Disabled for now -->
    <Rule Id="SA1200" Action="Warning" />  <!-- Using directive should appear within namespace declaration -->
    <Rule Id="SA1309" Action="None" />     <!-- Field should not begin with underscore - Follow Microsoft conventions -->
    <Rule Id="SA1101" Action="None" />     <!-- Prefix local calls with this - Not required in modern C# -->
    <Rule Id="SA1516" Action="Info" />     <!-- Elements should be separated by blank line -->
    <Rule Id="SA1413" Action="Info" />     <!-- Use trailing comma in multi-line initializers -->
  </Rules>
</RuleSet>
