# Base Docker Compose file for Visual Studio compatibility
# This is a copy of docker-compose.dev.yml for VS compatibility
# For other environments, use: 
#   UAT: docker-compose -f docker-compose.uat.yml up
#   PROD: docker-compose -f docker-compose.prod.yml up

version: '3.8'

services:
  api:
    image: xydatalabs-orderprocessingsystem-api
    build:
      context: .
      dockerfile: XYDataLabs.OrderProcessingSystem.API/Dockerfile
      target: final
    ports:
      - "${API_HTTP_PORT}:${API_HTTP_PORT}"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:${API_HTTP_PORT}
      - ASPNETCORE_HTTP_PORTS=${API_HTTP_PORT}
      - USE_HTTPS=false
    volumes:
      - ./dev-certs/aspnetapp.pfx:/https/aspnetapp.pfx:ro
      - ./sharedsettings.dev.json:/app/sharedsettings.dev.json:ro
    networks:
      - xynetwork
    profiles: ["http", "all", "api"]
    healthcheck:
      test: curl --fail http://localhost:${API_HTTP_PORT}/swagger --insecure || exit 1
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 10s

  ui:
    image: xydatalabs-orderprocessingsystem-ui
    build:
      context: .
      dockerfile: XYDataLabs.OrderProcessingSystem.UI/Dockerfile
      target: final
    ports:
      - "${UI_HTTP_PORT}:${UI_HTTP_PORT}"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:${UI_HTTP_PORT}
      - ASPNETCORE_HTTP_PORTS=${UI_HTTP_PORT}
      - ApiSettings__BaseUrl=http://localhost:${API_HTTP_PORT}
      - USE_HTTPS=false
    volumes:
      - ./sharedsettings.dev.json:/app/sharedsettings.dev.json:ro
    networks:
      - xynetwork
    profiles: ["http", "all", "ui"]
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:${UI_HTTP_PORT} --insecure || exit 1
      interval: 30s
      timeout: 10s
      retries: 2
      start_period: 10s

networks:
  xynetwork:
    external: true