services:
  api:
    image: xydatalabs-orderprocessingsystem-api
    build:
      context: .
      dockerfile: XYDataLabs.OrderProcessingSystem.API/Dockerfile
      target: dev  # Use the dev target for development
    ports:
      - "5000:8080" 
      - "5001:8081"  # HTTPS
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
    volumes:
      - ./dev-certs/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    networks:
      - xynetwork
    profiles: ["api", "all"]  # Add profiles
    healthcheck:
      test: curl --fail https://localhost:8081/swagger --insecure || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  ui:
    image: xydatalabs-orderprocessingsystem-ui
    build:
      context: .
      dockerfile: XYDataLabs.OrderProcessingSystem.UI/Dockerfile
      target: dev  # Use the dev target for development
    ports:
      - "5002:8080"  # HTTP (fixed mapping: host 5002 -> container 8080)
      - "5003:8081"  # HTTPS
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - API_BASE_URL=https://localhost:5001
    volumes:
      - ./dev-certs/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    depends_on:
      api:
        condition: service_healthy
    networks:
      - xynetwork
    profiles: ["ui", "all"]  # Add profiles
    healthcheck:
      test: curl --fail https://localhost:8081/Home/Error --insecure || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  xynetwork:
    driver: bridge
